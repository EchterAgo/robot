////////////////////////////////////////////////////////////////////////////////
// -------------------------------------------------------------------------- //
//                                                                            //
//                       (C) 2010-2015 Robot Developers                       //
//                       See LICENSE for licensing info                       //
//                                                                            //
// -------------------------------------------------------------------------- //
////////////////////////////////////////////////////////////////////////////////

//----------------------------------------------------------------------------//
// Prefaces                                                                   //
//----------------------------------------------------------------------------//

#include "Timer.h"
#ifdef ROBOT_OS_LINUX

	// TODO:

#endif
#ifdef ROBOT_OS_MAC

	// TODO:

#endif
#ifdef ROBOT_OS_WIN

	// TODO:

#endif
namespace Robot {



//----------------------------------------------------------------------------//
// Constructors                                                         Timer //
//----------------------------------------------------------------------------//

////////////////////////////////////////////////////////////////////////////////

Timer::Timer (void)
{
	// TODO:
}



//----------------------------------------------------------------------------//
// Functions                                                            Timer //
//----------------------------------------------------------------------------//

////////////////////////////////////////////////////////////////////////////////

void Timer::Start (void)
{
	// TODO:
}

////////////////////////////////////////////////////////////////////////////////

void Timer::Reset (void)
{
	// TODO:
}

////////////////////////////////////////////////////////////////////////////////

uint64 Timer::Restart (void)
{
	// TODO:
	return 0;
}

////////////////////////////////////////////////////////////////////////////////

uint64 Timer::GetElapsed (void) const
{
	// TODO:
	return 0;
}

////////////////////////////////////////////////////////////////////////////////

bool Timer::HasStarted (void) const
{
	// TODO:
	return false;
}

////////////////////////////////////////////////////////////////////////////////

bool Timer::HasExpired (uint64 time) const
{
	// TODO:
	return false;
}

////////////////////////////////////////////////////////////////////////////////

void Timer::Sleep (const Range& time)
{
#ifdef ROBOT_OS_LINUX

	// TODO:

#endif
#ifdef ROBOT_OS_MAC

	// TODO:

#endif
#ifdef ROBOT_OS_WIN

	// TODO:

#endif
}

////////////////////////////////////////////////////////////////////////////////

void Timer::Sleep
	(uint32 minimum, uint32 maximum)
{
	// TODO:
}

////////////////////////////////////////////////////////////////////////////////

uint64 Timer::GetCpuTime (void)
{
#ifdef ROBOT_OS_LINUX

	// TODO:
	return 0;

#endif
#ifdef ROBOT_OS_MAC

	// TODO:
	return 0;

#endif
#ifdef ROBOT_OS_WIN

	// TODO:
	return 0;

#endif
}



//----------------------------------------------------------------------------//
// Operators                                                            Timer //
//----------------------------------------------------------------------------//

////////////////////////////////////////////////////////////////////////////////

uint64 Timer::operator () (void) const
{
	// TODO:
	return 0;
}

////////////////////////////////////////////////////////////////////////////////

bool Timer::operator < (const Timer& timer) const
{
	// TODO:
	return false;
}

////////////////////////////////////////////////////////////////////////////////

bool Timer::operator > (const Timer& timer) const
{
	// TODO:
	return false;
}

////////////////////////////////////////////////////////////////////////////////

bool Timer::operator <= (const Timer& timer) const
{
	// TODO:
	return false;
}

////////////////////////////////////////////////////////////////////////////////

bool Timer::operator >= (const Timer& timer) const
{
	// TODO:
	return false;
}

////////////////////////////////////////////////////////////////////////////////

bool Timer::operator == (const Timer& timer) const
{
	// TODO:
	return false;
}

////////////////////////////////////////////////////////////////////////////////

bool Timer::operator != (const Timer& timer) const
{
	// TODO:
	return false;
}

}
